global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
        stats timeout 30s
        user haproxy
        group haproxy
        daemon

        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        # Default ciphers to use on SSL-enabled listening sockets.
        # For more information, see ciphers(1SSL). This list is from:
        #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
        # An alternative list with additional directives can be obtained from
        #  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
        ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
        ssl-default-bind-options no-sslv3

defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http

frontend srv-http
    bind *:80
    mode http
    acl ACL_GRAFANA hdr(host) -i  grafana.sarajkins.space
    acl ACL_GITLAB hdr(host) -i  gitlab.sarajkins.space
    acl ACL_APP hdr(host) -i  app.sarajkins.space    
    acl ACL_TEST_APP  hdr(host) -i  test-app.sarajkins.space       
    use_backend http-back-grafana if ACL_GRAFANA
    use_backend http-back-gitlab if ACL_GITLAB
    use_backend http-back-app if ACL_APP    
    use_backend http-back-test-app if ACL_TEST_APP  

backend http-back-grafana
    mode http
    server master $internal_ip_address_master_yandex_cloud:30080

backend http-back-gitlab
    mode http
    server gitlab $internal_ip_address_gitlab_yandex_cloud:80

backend http-back-app
    mode http
    server app $internal_ip_address_master_yandex_cloud:30080

backend http-back-test-app
    mode http
    server test-app $internal_ip_address_master_yandex_cloud:30080

frontend srv-ssh-master
    bind *:2222
    mode tcp
    default_backend ssh-back-master

backend ssh-back-master
    mode tcp
    server master-ssh $internal_ip_address_master_yandex_cloud:22

frontend srv-ssh-runner
    bind *:2223
    mode tcp
    default_backend ssh-back-runner

backend ssh-back-runner
    mode tcp
    server runner-ssh $internal_ip_address_runner_yandex_cloud:22

frontend srv-kuber
    bind *:6443
    mode tcp       
    default_backend kuber-back-master

backend kuber-back-master
    mode tcp
    server master-kuber $internal_ip_address_master_yandex_cloud:6443